/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package intranet;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author 2class-004
 */

public class Intra extends javax.swing.JFrame {

	DefaultTableModel model;
    BoardDAO bDAO= new BoardDAO();
	Color cr;
    CardLayout card;
	
    public Intra(){
        initComponents();
//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        card=(CardLayout)pCenter.getLayout();
        card.addLayoutComponent(pBoard, "board");
        
        //lbBoard 찍으면 게시판으로
        lbBoard.addMouseListener((new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e)
        	{
        		card.show(pCenter, "board");
        		System.out.println("board on");
        	}
        }));
//$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

        //lbempno 찍으면 사번 바뀌게 테스트
        lbEmpno.addMouseListener((new MouseAdapter() {
        	@Override
        	public void mousePressed(MouseEvent e)
        	{
        		String str;
        		str=JOptionPane.showInputDialog("input");
        		
        		lbEmpno.setText(str);
        		System.out.println("set ID "+str);
        	}
        }));
        
        //lbLogout 찍으면 창꺼지게
        lbLogout.addMouseListener((new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e)
        	{
        		System.exit(0);
        	}
        }));
        
        
        //tfSearch 액션주기
        tfSearch.addActionListener((new ActionListener() {
        	@Override
        	public void actionPerformed(ActionEvent e) {
        		showAll();
        	}
        }));
        //tfWrite 액션주기
        tfWrite.addActionListener((new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				
				String name= lbEmpno.getText();
		    	String msg= tfWrite.getText();
		    	
		    	//무결성
		    	if(msg.trim().isEmpty())
		    	{
		    		showMessage("내용을 입력하세요");
		    		tfWrite.setText("");
		    		tfWrite.requestFocus();
		    		return;
		    	}
		    	
		    	BoardVO bVO= new BoardVO();
		    	bVO.setName(name);
		    	bVO.setMsg(msg);
		    	
		    	try {
		    		String regCheck=(bDAO.writeBoard(bVO)>0?"글이 등록되었습니다":"등록 실패");
		    		showMessage(regCheck);
					
				} catch (Exception e2) {
					e2.printStackTrace();
				}
		    	
		    	tfWrite.setText("");
		    	
//		    	작업끝나고 테이블 리프레쉬
		    	showAll();
		    	boardEnable();
			} 
        }));
        
        //table view setting
        tbBoard.setSelectionBackground(cr= new Color(150,150,150));
        tbBoard.setShowGrid(false);
        tbBoard.setRowHeight(20);
        
        showAll();
        showReply();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        pTop = new javax.swing.JPanel();
        lbMypage = new javax.swing.JLabel();
        lbMsg = new javax.swing.JLabel();
        lbLogout = new javax.swing.JLabel();
        lbLogo = new javax.swing.JLabel();
        pLeft = new javax.swing.JPanel();
        lbNotice = new javax.swing.JLabel();
        lbBoard = new javax.swing.JLabel();
        lbMeetroom = new javax.swing.JLabel();
        lbAdmin = new javax.swing.JLabel();
        pCenter = new javax.swing.JPanel();
        pBoard = new javax.swing.JPanel();
        bd_lbHeader = new javax.swing.JLabel();
        cbSearch = new javax.swing.JComboBox<>();
        tfWrite = new javax.swing.JTextField();
        btWrite = new javax.swing.JButton();
        bd_spList = new javax.swing.JScrollPane();
        tbBoard = new javax.swing.JTable();
        lbWriter = new javax.swing.JLabel();
        lbEmpno = new javax.swing.JLabel();
        btSearch = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        btDelete = new javax.swing.JButton();
        btReply = new javax.swing.JButton();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1100, 620));

        pTop.setBackground(new java.awt.Color(121, 176, 215));

        lbMypage.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbMypage.setForeground(new java.awt.Color(255, 255, 255));
        lbMypage.setText("마이페이지");

        lbMsg.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbMsg.setForeground(new java.awt.Color(255, 255, 255));
        lbMsg.setText("쪽지함");

        lbLogout.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbLogout.setForeground(new java.awt.Color(255, 255, 255));
        lbLogout.setText("로그아웃");

        lbLogo.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbLogo.setForeground(new java.awt.Color(255, 255, 255));
        lbLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/companyLogo_S.jpg"))); // NOI18N

        javax.swing.GroupLayout pTopLayout = new javax.swing.GroupLayout(pTop);
        pTop.setLayout(pTopLayout);
        pTopLayout.setHorizontalGroup(
            pTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbMypage)
                .addGap(18, 18, 18)
                .addComponent(lbMsg)
                .addGap(18, 18, 18)
                .addComponent(lbLogout)
                .addGap(26, 26, 26))
        );
        pTopLayout.setVerticalGroup(
            pTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pTopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTopLayout.createSequentialGroup()
                        .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTopLayout.createSequentialGroup()
                        .addGroup(pTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMypage)
                            .addComponent(lbMsg)
                            .addComponent(lbLogout))
                        .addGap(30, 30, 30))))
        );

        pLeft.setBackground(new java.awt.Color(204, 204, 204));

        lbNotice.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbNotice.setText("◎ 공지사항");
        

        lbBoard.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbBoard.setText("◎ 한 줄 게시판");

        lbMeetroom.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbMeetroom.setText("◎ 회의실 예약");

        lbAdmin.setFont(new java.awt.Font("맑은 고딕", 1, 14)); // NOI18N
        lbAdmin.setForeground(new java.awt.Color(102, 102, 102));
        lbAdmin.setText("관리자 모드");

        javax.swing.GroupLayout pLeftLayout = new javax.swing.GroupLayout(pLeft);
        pLeft.setLayout(pLeftLayout);
        pLeftLayout.setHorizontalGroup(
            pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLeftLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAdmin)
                    .addComponent(lbMeetroom)
                    .addComponent(lbBoard)
                    .addComponent(lbNotice))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        pLeftLayout.setVerticalGroup(
            pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLeftLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lbNotice)
                .addGap(18, 18, 18)
                .addComponent(lbBoard)
                .addGap(18, 18, 18)
                .addComponent(lbMeetroom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbAdmin)
                .addGap(30, 30, 30))
        );

        pCenter.setLayout(new java.awt.CardLayout());

        pBoard.setBackground(new java.awt.Color(255, 255, 255));

        bd_lbHeader.setFont(new java.awt.Font("맑은 고딕", 1, 18)); // NOI18N
        bd_lbHeader.setText("::: 한 줄 게시판 :::");

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "글번호", "작성자", "내용" }));
        

        btWrite.setText("등록");
        btWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	try {
            		btWriteActionPerformed(evt);
					
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });

        tbBoard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "글번호", "내용", "작성자", "작성일"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        bd_spList.setViewportView(tbBoard);

        lbWriter.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        lbWriter.setText("작성자 :");

        btSearch.setText("검색");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	try {
					
            		btSearchActionPerformed(evt);
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });

        btDelete.setText("삭제");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });
        
        btReply.setText("답글");
        btReply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	try {
            		btReplyActionPerformed(evt);
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
        

        javax.swing.GroupLayout pBoardLayout = new javax.swing.GroupLayout(pBoard);
        pBoard.setLayout(pBoardLayout);
        pBoardLayout.setHorizontalGroup(
            pBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBoardLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(pBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pBoardLayout.createSequentialGroup()
                        .addComponent(btDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btReply)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSearch))
                    .addGroup(pBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(bd_spList, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pBoardLayout.createSequentialGroup()
                            .addComponent(lbWriter)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lbEmpno, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfWrite, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btWrite))
                        .addComponent(bd_lbHeader)))
                .addGap(65, 65, 65))
        );
        pBoardLayout.setVerticalGroup(
            pBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pBoardLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(bd_lbHeader)
                .addGap(18, 18, 18)
                .addGroup(pBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btWrite)
                        .addComponent(tfWrite, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbEmpno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbWriter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(bd_spList, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearch)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDelete)
                	.addComponent(btReply))
                .addGap(15, 15, 15))
        );

        pCenter.add(pBoard, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(pCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pTop, javax.swing.GroupLayout.PREFERRED_SIZE, 104, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>                        

    public void setTableHeader()
    {
        //테이블 헤더 간격
        JTableHeader header=tbBoard.getTableHeader();
        header.getColumnModel().getColumn(0).setPreferredWidth((int)(tbBoard.getWidth()*0.05));
        header.getColumnModel().getColumn(1).setPreferredWidth((int)(tbBoard.getWidth()*0.1));
        header.getColumnModel().getColumn(2).setPreferredWidth((int)(tbBoard.getWidth()*0.7));
        header.getColumnModel().getColumn(3).setPreferredWidth((int)(tbBoard.getWidth()*0.15));

        DefaultTableCellRenderer align= new DefaultTableCellRenderer();
    	align.setHorizontalAlignment(SwingConstants.CENTER);
    	align.setBackground(cr= new Color(230,230,230));
    	header.getColumnModel().getColumn(0).setHeaderRenderer(align);
    	header.getColumnModel().getColumn(1).setHeaderRenderer(align);
    	header.getColumnModel().getColumn(2).setHeaderRenderer(align);
    	header.getColumnModel().getColumn(3).setHeaderRenderer(align);

        header.setResizingAllowed(false);
        header.setEnabled(false);
        
    }

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) throws Exception{
    	showAll();
    }
    public void showAll()
    {

    	//1. 검색유형 알아내기
    	int index= cbSearch.getSelectedIndex();
    	//2. 검색어 얻어오기
    	String keyword= tfSearch.getText();
    	ArrayList<BoardVO> al= bDAO.searchBoard(index, keyword);
    	
    	//3. 유효성체크
//    	if(keyword.trim().isEmpty())
//    	{
//    		showMessage("검색어를 입력하세요");
//    		return;
//    	}
//    	
    	//4. search 받기
    	showTable(al);
 	
    }
    String colHeader[]= {"NO","작성자","내  용","작성일"};
    public void showTable(ArrayList<BoardVO> arr)
    {
    	Object board[][]= new Object[arr.size()][4];
   	
    	//ArrayList 의 내용을 data에 옮기기
    	for(int i=0; i<board.length; i++)
    	{
    		BoardVO bVO= arr.get(i);		//행하나
    		board[i][0]= bVO.getIdx();
    		board[i][1]= bVO.getName();
    		board[i][2]= bVO.getMsg();
    		board[i][3]= bVO.getWdate();
    		
    	}
    	//5. create DefaultTableModel object
    	model=(DefaultTableModel)this.tbBoard.getModel();
    		//new defaulttablemodel이 아니라 세팅한 테이블모델을 가져와야 하므로
    	model.setDataVector(board, colHeader);
    		//new DefaultTableModel(data, colHeader) 해주던게 getModel()에서 없으니까
    		//값을 넣어줘야함
    		//public void setDataVector(Object[][] dataVector, Object[] columnIdentifiers)
    	//6. table model 설정
    	tbBoard.setModel(model);

    	//셀 가운데정렬
    	DefaultTableCellRenderer col1= new DefaultTableCellRenderer();
    	col1.setHorizontalAlignment(SwingConstants.CENTER);
    	col1.setBackground(Color.lightGray);
    	DefaultTableCellRenderer col2= new DefaultTableCellRenderer();
    	col2.setHorizontalAlignment(SwingConstants.CENTER);
    	col2.setBackground(cr= new Color(207,222,238));
    	DefaultTableCellRenderer col3= new DefaultTableCellRenderer();
    	col3.setHorizontalAlignment(SwingConstants.LEFT);
    	col3.setBackground(Color.white);
    	DefaultTableCellRenderer col4= new DefaultTableCellRenderer();
    	col4.setHorizontalAlignment(SwingConstants.CENTER);
    	col4.setBackground(cr= new Color(207,222,238));
    	
    	TableColumnModel tcm= tbBoard.getColumnModel();
    	System.out.println(tcm.getColumn(0).getHeaderValue());
//    	align.setHorizontalAlignment(SwingConstants.RIGHT);
    	tcm.getColumn(0).setCellRenderer(col1);
    	tcm.getColumn(1).setCellRenderer(col2);
    	tcm.getColumn(2).setCellRenderer(col3);
    	tcm.getColumn(3).setCellRenderer(col4);
    	
    	setTableHeader();
		
    }
   
    
    private void btWriteActionPerformed(java.awt.event.ActionEvent evt) throws Exception{                                        
        
    	String name= lbEmpno.getText();
    	String msg= tfWrite.getText();
    	
    	//무결성
    	if(msg.trim().isEmpty())
    	{
    		showMessage("내용을 입력하세요");
    		tfWrite.setText("");
    		tfWrite.requestFocus();
    		return;
    	}
    	if(name.trim().isEmpty())
    	{
    		showMessage("사용자가 존재하지 않습니다 당신은 누구죠?");
    		return;
    	}
    	
    	BoardVO bVO= new BoardVO();
    	bVO.setName(name);
    	bVO.setMsg(msg);
    	String regCheck=(bDAO.writeBoard(bVO)>0?"글이 등록되었습니다":"등록 실패");
    	
    	showMessage(regCheck);
    	tfWrite.setText("");
    	
//    	작업끝나고 테이블 리프레쉬
    	showAll();
    	boardEnable();
    }                                       

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //get id
    	String empno= lbEmpno.getText();
    	//get row
    	int row=tbBoard.getSelectedRow();
//    	System.out.println(tbBoard.isRowSelected(row));
    	
    	//유효성: 라벨사번과 작성자 사번이 맞지않으면 에러메시지
    	if(tbBoard.isRowSelected(row)==false)
    	{
    		showMessage("삭제할 글을 선택하세요");
    		System.out.println("selection error");
    		return;
    	}
    	Object objWrt= tbBoard.getValueAt(row, 1);
    	String writer= (String)objWrt;
    	if(!empno.trim().equals(writer)||empno==null)
    	{
    		showMessage("지울수 있는 권한이 없습니다");
    		System.out.println("access error");
    		return;
    	}
    	
    	Object objIdx= tbBoard.getValueAt(row, 0);
    	Integer idx=(Integer)objIdx;

    	int yn=JOptionPane.showConfirmDialog(tbBoard, idx+"번 글을 삭제할까요?");
    	
    	if(yn==JOptionPane.YES_OPTION)
    	{
    		int r=bDAO.delete(idx);
    		String str=(r>0?"글이 삭제되었습니다":"삭제실패");
    		showMessage(str);
    	}
    	
    	//작업끝나고 테이블 리프레쉬
    	showAll();
    	boardEnable();
    	
    }                  
    private void btReplyActionPerformed(java.awt.event.ActionEvent evt) throws Exception{
    	
    	String empno= lbEmpno.getText();
    	int row=tbBoard.getSelectedRow();
    	
    	//유효성 체크
    	if(tbBoard.isRowSelected(row)==false)	//항목선택 안됐을때
    	{
    		showMessage("댓글을 달고자하는 항목을 선택하세요");
    		return;
    	}
    	if(lbEmpno.getText().trim().isEmpty())	//사번이 없을때
    	{
    		showMessage("로그인되지 않았습니다");
    		return;
    	}
    	
    	//bdid 연동시키기?
    	Object objIdx= tbBoard.getValueAt(row, 0);
    	Integer boardID= (Integer)objIdx;
    	if(row==99)
    	{
    		showMessage("댓글에는 또다른 댓글을 달 수 없습니다");
    		return;
    	}

    	//showinputdialog 취소했을때 nullpointer 잡아주는 try catch
    	try {
    		String reply=JOptionPane.showInputDialog("답글을 입력하세요");	//reply msg			
    		if(reply.trim().isEmpty())
    		{
    			showMessage("내용을 입력해주세요");
    			return;
    		}
    		ReplyVO rVO= new ReplyVO();
    		rVO.setName(empno);
    		rVO.setMsg(reply);
    		String regCheck=(bDAO.insertReply(rVO,boardID)>0? "성공":"실패");
    		System.out.println(rVO.getName());		//테스트용
    		showMessage(regCheck);
		} catch (NullPointerException e) {
			System.out.println("댓글달기 취소");
			showMessage("댓글달기를 취소했습니다");
		}
    	
    	//작업 끝내고 테이블 리프레쉬
    	showAll();
    	boardEnable();
    }
    
    public void showReply()
    {
        tbBoard.addMouseListener(new MouseAdapter() {
        	int count=0;
        	@Override
        	public void mouseClicked(MouseEvent e)
        	{
        		//1. 마우스로 누른지점 테이블인덱스 알아내기
        		int row= tbBoard.getSelectedRow();
        		if(tbBoard.isEnabled()==true) {
//        			System.out.println(row);
        			
        			Object objIdx= tbBoard.getValueAt(row,0);
        			Integer idx=(Integer)objIdx;
        			
        			//2. 사용자에게 댓글 보여주기
        			int bdid= (int)tbBoard.getValueAt(row, 0);		//선택된 행의 bdid값 가져옴
        			ArrayList<ReplyVO> alR= bDAO.selectReply(bdid);
        			
        			for(count=0; count<alR.size(); count++)
        			{
        				Object data[]= new Object[4];
        				ReplyVO rp= alR.get(count);
        				data[0]=rp.getIdx();
        				data[1]=rp.getName();
        				data[2]=rp.getMsg();
        				data[3]=rp.getWdate();
        				//void insertRow(int row, Object[] rowData)  
        				model.insertRow(row+1,data);
//        				System.out.println(count);				//test

        			}
        			tbBoard.setSelectionBackground(cr= new Color(100,100,240));
        			tbBoard.setEnabled(false);
        			System.out.println("board disabled");
        		}//--if
        		else
        		{
//        			System.out.println("---"+count);			//test
        			for(int i=0; i<count; i++)
        			{
        				model.removeRow(row+1);
        			}

        			tbBoard.setEnabled(true);
        			System.out.println("board enabled");
        			tbBoard.setSelectionBackground(cr= new Color(150,150,150));
        		}
        	}
        });
    }

    public void showMessage(String msg) {
    	JOptionPane.showMessageDialog(this, msg);
    }
    public void boardEnable() 
    {
		if(tbBoard.isEnabled()==false) {
			tbBoard.setEnabled(true);
		}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Intra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Intra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Intra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Intra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Intra().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel bd_lbHeader;
    private javax.swing.JScrollPane bd_spList;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btReply;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btWrite;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JLabel lbAdmin;
    private javax.swing.JLabel lbBoard;
    private javax.swing.JLabel lbEmpno;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lbLogout;
    private javax.swing.JLabel lbMeetroom;
    private javax.swing.JLabel lbMsg;
    private javax.swing.JLabel lbMypage;
    private javax.swing.JLabel lbNotice;
    private javax.swing.JLabel lbWriter;
    private javax.swing.JPanel pBoard;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pLeft;
    private javax.swing.JPanel pTop;
    private javax.swing.JTable tbBoard;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField tfWrite;
    // End of variables declaration                   
}
